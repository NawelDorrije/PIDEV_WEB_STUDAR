{% extends 'admin/dashboard.html.twig' %}

{% block title %}Réclamations Avancées{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Card Styling */
        .reclamation-card {
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            border: none;
            border-radius: 12px;
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
            min-height: 280px;
            width: 100%;
        }
        .reclamation-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }
        .reclamation-card.bg-primary {
            background-color: #5a8dee;
        }
        .reclamation-card.bg-success {
            background-color: #5cb85c;
        }
        .reclamation-card.bg-danger {
            background-color: #d9534f;
        }
        .reclamation-card.bg-secondary {
            background-color: #6c757d;
        }
        .reclamation-card, 
        .reclamation-card .card-header,
        .reclamation-card .card-body,
        .reclamation-card .card-body p,
        .reclamation-card .card-body strong,
        .reclamation-card .card-footer {
            color: #fff !important;
        }
        .card-header {
            background: rgba(255, 255, 255, 0.15);
            padding: 12px 15px;
            border-radius: 12px 12px 0 0;
            font-size: 1.2rem;
            font-weight: 600;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }
        .card-body {
            padding: 25px;
            font-size: 0.95rem;
        }
        .card-body p {
            margin-bottom: 12px;
            display: flex;
            align-items: center;
        }
        .card-body strong {
            font-weight: 500;
            margin-left: 5px;
        }
        .card-body i {
            margin-right: 10px;
            color: rgba(255, 255, 255, 0.7);
            font-size: 1.1rem;
        }
        .card-footer {
            padding: 15px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 0 0 12px 12px;
            display: flex;
            justify-content: flex-end;
            gap: 12px;
        }
        .card-footer .btn {
            padding: 8px 15px;
            font-size: 0.9rem;
            border-radius: 5px;
            transition: all 0.2s ease;
            border: 1px solid rgba(255, 255, 255, 0.3);
            background-color: transparent;
            color: #fff !important;
        }
        .card-footer .btn-info {
            border-color: #0dcaf0;
        }
        .card-footer .btn-info:hover {
            background-color: #0dcaf0;
            color: #fff !important;
        }
        .card-footer .btn-warning {
            border-color: #ffc107;
        }
        .card-footer .btn-warning:hover {
            background-color: #ffc107;
            color: #fff !important;
        }
        .card-footer .btn-danger {
            border-color: #dc3545;
        }
        .card-footer .btn-danger:hover {
            background-color: #dc3545;
            color: #fff !important;
        }
        /* Contenu principal */
        .reclamation-content {
            padding: 0 15px;
        }
        .row1 {
            display: flex;
            flex-wrap: wrap;
            gap: 25px;
        }
        .col-lg-4 {
            flex: 1 1 calc(33.333% - 25px);
            max-width: calc(33.333% - 25px);
        }

        /* Style pour la barre de navigation */
        .navbar-filter {
            margin-bottom: 25px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            padding: 15px;
            background-color: #f8f9fa;
        }
        .navbar-filter .filter-form {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            align-items: center;
        }
        .navbar-filter .form-group {
            margin-bottom: 0;
            display: flex;
            align-items: center;
            position: relative;
        }
        .navbar-filter .form-group label {
            margin-right: 10px;
            margin-bottom: 0;
            font-weight: 500;
        }
        .navbar-filter .form-control {
            padding: 8px 8px 8px 35px;
        }
        .navbar-filter .btn {
            margin-left: 10px;
        }
        .navbar-filter .form-group i {
            position: absolute;
            left: 8px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }
        .navbar-filter .search-group {
            position: relative;
        }
        .navbar-filter .search-group i {
            position: absolute;
            left: 8px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .col-lg-4 {
                flex: 1 1 calc(50% - 25px);
                max-width: calc(50% - 25px);
            }
            .navbar-filter .form-control {
                width: 150px;
            }
        }
        @media (max-width: 576px) {
            .col-lg-4 {
                flex: 1 1 100%;
                max-width: 100%;
            }
            .reclamation-card {
                min-height: 200px;
            }
            .card-body {
                padding: 15px;
                font-size: 0.9rem;
            }
            .card-header {
                font-size: 1rem;
            }
            .card-footer .btn {
                padding: 6px 12px;
                font-size: 0.8rem;
            }
            .navbar-filter .filter-form {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            .navbar-filter .form-control {
                width: 100%;
            }
            .navbar-filter .form-group {
                width: 100%;
            }
            .navbar-filter .btn {
                margin-left: 0;
                margin-top: 5px;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <main class="main-content position-relative reclamation-container">
        <!-- Barre de navigation pour la recherche et les filtres -->
        <div class="navbar-filter">
            <form class="filter-form" method="get" action="{{ path('admin_reclamation') }}">
                <!-- Recherche -->
                <div class="form-group search-group">
                    <i class="fas fa-search"></i>
                    <input class="form-control" type="search" placeholder="Rechercher..." aria-label="Search" id="searchReclamation">
                </div>
                <!-- Filtre par utilisateur -->
                <div class="form-group">
                    <label for="user_filter">Utilisateur :</label>
                    
                    <select class="form-control" id="user_filter" name="user_filter">
                        <option value="">Tous les utilisateurs</option>
                        {% for user in users %}
                            <option value="{{ user.cin }}" {{ selected_user == user.cin ? 'selected' : '' }}>
                                {{ user.nom }} {{ user.prenom }} (CIN: {{ user.cin }})
                            </option>
                        {% endfor %}
                    </select>
                </div>
                <!-- Filtre par statut -->
                <div class="form-group">
                    <label for="statut_filter">Statut :</label>
                    
                    <select class="form-control" id="statut_filter" name="statut_filter">
                        <option value="">Tous les statuts</option>
                        <option value="en cours" {{ selected_statut == 'en cours' ? 'selected' : '' }}>En cours</option>
                        <option value="traité" {{ selected_statut == 'traité' ? 'selected' : '' }}>Traité</option>
                        <option value="refusé" {{ selected_statut == 'refusé' ? 'selected' : '' }}>Refusé</option>
                    </select>
                </div>
                <!-- Filtre par date -->
                <div class="form-group">
                    <label for="date_filter">Date :</label>
                    <i class="fas fa-calendar-alt"></i>
                    <input type="date" class="form-control" id="date_filter" name="date_filter" value="{{ selected_date }}">
                </div>
                {# <button type="submit" class="btn btn-outline-success">Filtrer</button> #}
                <button type="button" class="btn btn-outline-secondary" onclick="window.location.href='{{ path('admin_reclamation') }}'">Réinitialiser</button>
            </form>
        </div>

        <div class="container-fluid py-4">
            <!-- Contenu principal : Les cartes de réclamation -->
            <div class="reclamation-content">
                <!-- Liste des réclamations -->
                <div class="row1" id="reclamationList">
                    {% if reclamations|length > 0 %}
                        {% for reclamation in reclamations %}
                            <div class="col-lg-4 col-md-6 col-sm-12 mb-4 reclamation-card-container">
                                <div class="card reclamation-card text-white {{
                                    reclamation.statut == 'en cours' ? 'bg-primary' :
                                    reclamation.statut == 'traité' ? 'bg-success' :
                                    reclamation.statut == 'refusé' ? 'bg-danger' : 'bg-secondary'
                                }}">
                                    <div class="card-header">
                                        <h6 class="mb-0">Réclamation #{{ reclamation.id }}</h6>
                                    </div>
                                    <div class="card-body">
                                        <p><i class="fas fa-user"></i> <strong>Utilisateur :</strong> {{ reclamation.utilisateur ? (reclamation.utilisateur.nom|default('') ~ ' ' ~ reclamation.utilisateur.prenom|default('')) : 'Anonyme' }}</p>
                                        <p><i class="fas fa-heading"></i> <strong>Titre :</strong> {{ reclamation.titre }}</p>
                                        <p><i class="fas fa-align-left"></i> <strong>Description :</strong> {{ reclamation.description }}</p>
                                        <p><i class="fas fa-calendar-alt"></i> <strong>Date :</strong> {{ reclamation.timestamp ? reclamation.timestamp|date('Y-m-d H:i') : 'Non définie' }}</p>
                                        <p><i class="fas fa-info-circle"></i> <strong>Statut :</strong> {{ reclamation.statut|default('non défini') }}</p>
                                        <p><i class="fas fa-home"></i> <strong>Logement :</strong> {{ reclamation.logement ? reclamation.logement.id : 'Non défini' }}</p>
                                    </div>
                                    <div class="card-footer">
                                        <a href="{{ path('admin_reclamation_show', {'id': reclamation.id}) }}" class="btn btn-info">Détails</a>
                                        <a href="{{ path('admin_reclamation_edit_recommend', {'id': reclamation.id}) }}" class="btn btn-warning">Modifier</a>
                                        <form method="post" action="{{ path('admin_reclamation_delete', {'id': reclamation.id}) }}" style="display:inline;" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette réclamation ?');">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ reclamation.id) }}">
                                            <button type="submit" class="btn btn-danger">Supprimer</button>
                                        </form>
                                        <a href="{{ path('admin_reclamation_respond', {'id': reclamation.id}) }}" class="btn btn-success">Répondre</a>

                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="col- lessened12">
                            <div class="alert alert-info text-center" role="alert">
                                Aucune réclamation trouvée.
                            </div>
                        </div>
                    {% endif %}
                </div>

                <!-- Pagination -->
                {% if total_pages > 1 %}
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item {{ current_page == 1 ? 'disabled' : '' }}">
                                <a class="page-link" href="{{ path('admin_reclamation', {'page': current_page - 1, 'sort_by': sort_by, 'sort_order': sort_order, 'user_filter': selected_user, 'statut_filter': selected_statut, 'date_filter': selected_date}) }}" aria-label="Previous">
                                    <span aria-hidden="true">«</span>
                                </a>
                            </li>
                            {% for i in 1..total_pages %}
                                <li class="page-item {{ current_page == i ? 'active' : '' }}">
                                    <a class="page-link" href="{{ path('admin_reclamation', {'page': i, 'sort_by': sort_by, 'sort_order': sort_order, 'user_filter': selected_user, 'statut_filter': selected_statut, 'date_filter': selected_date}) }}">{{ i }}</a>
                                </li>
                            {% endfor %}
                            <li class="page-item {{ current_page == total_pages ? 'disabled' : '' }}">
                                <a class="page-link" href="{{ path('admin_reclamation', {'page': current_page + 1, 'sort_by': sort_by, 'sort_order': sort_order, 'user_filter': selected_user, 'statut_filter': selected_statut, 'date_filter': selected_date}) }}" aria-label="Next">
                                    <span aria-hidden="true">»</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                {% endif %}
            </div>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Ensure DOM is fully loaded before running the script
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchReclamation');
            const userFilter = document.getElementById('user_filter');
            const statutFilter = document.getElementById('statut_filter');

            // Check if all required elements exist
            if (!searchInput) {
                console.error('Search input element not found!');
                return;
            }
            if (!userFilter) {
                console.error('User filter element not found!');
                return;
            }
            if (!statutFilter) {
                console.error('Statut filter element not found!');
                return;
            }

            // Debounce function to limit the frequency of filter execution
            function debounce(func, wait) {
                let timeout;
                return function(...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            // Filter function that combines search, user, and status filters
            const applyFilters = debounce(function() {
                const searchText = searchInput.value.trim().toLowerCase();
                const selectedUser = userFilter.value.trim();
                const selectedStatut = statutFilter.value.trim();
                const cards = document.querySelectorAll('.reclamation-card-container');

                cards.forEach(card => {
                    // Extract text from multiple fields for search, with null checks
                    const userElement = card.querySelector('.card-body p:nth-child(1)');
                    const titleElement = card.querySelector('.card-body p:nth-child(2)');
                    const descriptionElement = card.querySelector('.card-body p:nth-child(3)');
                    const dateElement = card.querySelector('.card-body p:nth-child(4)');
                    const statusElement = card.querySelector('.card-body p:nth-child(5)');
                    const logementElement = card.querySelector('.card-body p:nth-child(6)');

                    // Use empty string if element is not found
                    const user = userElement ? userElement.textContent.toLowerCase() : '';
                    const title = titleElement ? titleElement.textContent.toLowerCase() : '';
                    const description = descriptionElement ? descriptionElement.textContent.toLowerCase() : '';
                    const date = dateElement ? dateElement.textContent.toLowerCase() : '';
                    const status = statusElement ? statusElement.textContent.toLowerCase() : '';
                    const logement = logementElement ? logementElement.textContent.toLowerCase() : '';

                    // Log for debugging
                    if (!userElement || !titleElement || !descriptionElement || !dateElement || !statusElement || !logementElement) {
                        console.warn('Incomplete card structure detected:', {
                            user: !!userElement,
                            title: !!titleElement,
                            description: !!descriptionElement,
                            date: !!dateElement,
                            status: !!statusElement,
                            logement: !!logementElement
                        });
                    }

                    // Check if the card matches the search text (if any)
                    const matchesSearch = searchText === '' || (
                        user.includes(searchText) ||
                        title.includes(searchText) ||
                        description.includes(searchText) ||
                        date.includes(searchText) ||
                        status.includes(searchText) ||
                        logement.includes(searchText)
                    );

                    // Check if the card matches the selected user (if any)
                    const userText = userElement ? userElement.textContent : '';
                    const matchesUser = selectedUser === '' || userText.includes(`cin: ${selectedUser}`);

                    // Check if the card matches the selected status (if any)
                    const matchesStatut = selectedStatut === '' || status.includes(selectedStatut);

                    // Show the card only if it matches all active filters
                    card.style.display = matchesSearch && matchesUser && matchesStatut ? '' : 'none';
                });
            }, 300); // 300ms debounce delay

            // Add event listeners for all filter inputs
            searchInput.addEventListener('input', applyFilters);
            userFilter.addEventListener('change', applyFilters);
            statutFilter.addEventListener('change', applyFilters);
        });
    </script>
{% endblock %}