{% extends 'admin/dashboard.html.twig' %}

{% block title %}Gestion des Signalements{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Card Styling */
        .report-card {
            max-width: 23rem;
            margin-bottom: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            border: none;
        }
        .card-header {
            padding: 0.5rem;
            font-size: 0.9rem;
            font-weight: 600;
            text-align: center;
            text-transform: uppercase;
            color: #fff;
            border-bottom: none;
        }
        .card-header.status-en-attente {
            background-color: #ffc107;
        }
        .card-header.status-resolu {
            background-color: #28a745;
        }
        .card-body {
            padding: 1rem;
            font-size: 0.875rem;
        }
        .card-body p {
            margin-bottom: 0.5rem;
        }
        .card-body .title-text {
            font-weight: 600;
        }
        .card-footer {
            padding: 0.5rem 1rem;
            background-color: #fff;
            border-top: none;
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
        }
        .card-footer .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            border-radius: 0.2rem;
            transition: all 0.2s ease;
            border: 1px solid;
            background-color: transparent;
            line-height: 1.2;
        }
        .card-footer .btn-primary {
            border-color: #007bff;
            color: #007bff;
        }
        .card-footer .btn-primary:hover {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }
        .card-footer .btn-danger {
            border-color: #dc3545;
            color: #dc3545;
        }
        .card-footer .btn-danger:hover {
            background-color: #dc3545;
            color: #fff;
            border-color: #dc3545;
        }
        .card-footer .btn-info {
            border-color: #17a2b8;
            color: #17a2b8;
        }
        .card-footer .btn-info:hover {
            background-color: #17a2b8;
            color: #fff;
            border-color: #17a2b8;
        }
        .report-content {
            padding: 0 15px;
            padding-left: 30px;
        }
        .row {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .col-lg-4 {
            flex: 1 1 calc(33.333% - 20px);
            max-width: calc(33.333% - 20px);
        }
        .navbar-filter {
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            padding: 12px;
            background-color: #f8f9fa;
        }
        .navbar-filter .filter-form {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: center;
        }
        .navbar-filter .form-group {
            margin-bottom: 0;
            display: flex;
            align-items: center;
            position: relative;
        }
        .navbar-filter .form-group label {
            margin-right: 8px;
            margin-bottom: 0;
            font-weight: 500;
        }
        .navbar-filter .form-control {
            padding: 6px 6px 6px 30px;
        }
        .navbar-filter .btn {
            margin-left: 8px;
        }
        .navbar-filter .form-group i {
            position: absolute;
            left: 6px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }
        .navbar-filter .search-group {
            position: relative;
        }
        .navbar-filter .search-group i {
            position: absolute;
            left: 6px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }
        @media (max-width: 992px) {
            .col-lg-4 {
                flex: 1 1 calc(50% - 20px);
                max-width: calc(50% - 20px);
            }
            .navbar-filter .form-control {
                width: 130px;
            }
        }
        @media (max-width: 576px) {
            .col-lg-4 {
                flex: 1 1 100%;
                max-width: 100%;
            }
            .report-card {
                max-width: 100%;
            }
            .card-body {
                padding: 1rem;
                font-size: 0.8rem;
            }
            .card-header {
                font-size: 0.8rem;
            }
            .card-footer .btn {
                padding: 0.2rem 0.4rem;
                font-size: 0.7rem;
            }
            .navbar-filter .filter-form {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
            }
            .navbar-filter .form-control {
                width: 100%;
            }
            .navbar-filter .form-group {
                width: 100%;
            }
            .navbar-filter .btn {
                margin-left: 0;
                margin-top: 5px;
            }
        }
        /* Modal Styling */
        .modal-body p {
            margin-bottom: 0.75rem;
        }
        .modal-body strong {
            color: #333;
        }
        .modal-footer .btn {
            margin-left: 0.5rem;
        }
    </style>
{% endblock %}

{% block body %}
    <main class="main-content position-relative report-container">
        <!-- Flash Messages -->
        {% for message in app.flashes('success') %}
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}

        <!-- Barre de navigation pour la recherche et les filtres -->
        <div class="navbar-filter">
            <form class="filter-form" method="get" action="{{ path('admin_report_index') }}">
                <div class="form-group search-group">
                    <i class="fas fa-search"></i>
                    <input class="form-control" type="search" placeholder="Rechercher..." aria-label="Search" id="searchReport" name="searchReport" value="{{ search }}">
                </div>
                <div class="form-group">
                    <label for="user_filter">Utilisateur :</label>
                    <select class="form-control" id="user_filter" name="user_filter">
                        <option value="">Tous les utilisateurs</option>
                        {% for user in users %}
                            <option value="{{ user.cin }}" {{ selected_user == user.cin ? 'selected' : '' }}>
                                {{ user.nom }} {{ user.prenom }} (CIN: {{ user.cin }})
                            </option>
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label for="statut_filter">Statut :</label>
                    <select class="form-control" id="statut_filter" name="statut_filter">
                        <option value="">Tous les statuts</option>
                        <option value="en attente" {{ selected_statut == 'en attente' ? 'selected' : '' }}>En attente</option>
                        <option value="resolu" {{ selected_statut == 'resolu' ? 'selected' : '' }}>Résolu</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="date_filter">Date :</label>
                    <i class="fas fa-calendar-alt"></i>
                    <input type="date" class="form-control" id="date_filter" name="date_filter" value="{{ selected_date }}">
                </div>
                <button type="button" class="btn btn-outline-secondary" onclick="window.location.href='{{ path('admin_report_index') }}'">Réinitialiser</button>
            </form>
        </div>

        <div class="container-fluid py-4 report-details-container">
            <div class="report-content">
                <div class="row" id="reportList">
                    {% if reports|length > 0 %}
                        {% for report in reports %}
                            <div class="col-lg-4 col-md-6 col-sm-12 report-card-container">
                                <div class="card report-card">
                                    <div class="card-header status-{{ report.isResolved ? 'resolu' : 'en-attente' }}">
                                        {{ report.isResolved ? 'Résolu' : 'En attente' | upper }}
                                    </div>
                                    <div class="card-body">
                                        <p class="title-text">Signalement #{{ report.id }}</p>
                                        <p>Raison : {{ report.reason|length > 50 ? report.reason|slice(0, 50) ~ '...' : report.reason }}</p>
                                        <p>Créé le : {{ report.createdAt ? report.createdAt|date('d/m/Y H:i') : 'Non défini' }}</p>
                                        <p>Utilisateur : 
                                            {% if report.reportedBy %}
                                                {{ report.reportedBy.nom|default('') }} {{ report.reportedBy.prenom|default('') }} (CIN: {{ report.reportedBy.cin|default('Inconnu') }})
                                            {% else %}
                                                Utilisateur inconnu
                                            {% endif %}
                                        </p>
                                        <p>Message : 
                                            {% if report.message %}
                                                {{ report.message.content|length > 50 ? report.message.content|slice(0, 50) ~ '...' : report.message.content }}
                                            {% else %}
                                                Message supprimé
                                            {% endif %}
                                        </p>
                                    </div>
                                    <div class="card-footer">
                                        {% if not report.isResolved %}
                                            <button class="btn btn-info analyze-btn" data-report-id="{{ report.id }}" data-csrf-token="{{ csrf_token('analyze' ~ report.id) }}"><i class="fas fa-search"></i> Analyser</button>
                                            <form action="{{ path('admin_report_resolve', {'id': report.id}) }}" method="post" style="display: inline;">
                                                <input type="hidden" name="_token" value="{{ csrf_token('resolve' ~ report.id) }}">
                                                <button type="submit" class="btn btn-primary"><i class="fas fa-check"></i> Résoudre</button>
                                            </form>
                                        {% endif %}
                                        {% if report.reportedBy and not report.reportedBy.blocked %}
                                            <form action="{{ path('admin_user_block', {'cin': report.reportedBy.cin}) }}" method="post" style="display: inline;">
                                                <input type="hidden" name="_token" value="{{ csrf_token('block' ~ report.reportedBy.cin) }}">
                                                <button type="submit" class="btn btn-danger" onclick="return confirm('Voulez-vous vraiment bloquer cet utilisateur ?');"><i class="fas fa-ban"></i> Bloquer</button>
                                            </form>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% else %}
                        <div class="col-12">
                            <div class="alert alert-info text-center" role="alert">
                                Aucun signalement trouvé.
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Modal for Analysis Result -->
        <div class="modal fade" id="analysisModal" tabindex="-1" aria-labelledby="analysisModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="analysisModalLabel">Résultat de l'Analyse</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p><strong>Signalement #<span id="modalReportId"></span></strong></p>
                        <p><strong>Statut :</strong> <span id="modalStatus"></span></p>
                        <p><strong>Raison du signalement :</strong> <span id="modalReportReason"></span></p>
                        <p><strong>Message signalé :</strong> <span id="modalMessage"></span></p>
                        <p><strong>Explication :</strong> <span id="modalReason"></span></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                        {# <button type="button" class="btn btn-danger block-btn" data-cin="" data-csrf-token="" style="display: none;"><i class="fas fa-ban"></i> Bloquer l'utilisateur</button> #}
                        <button type="button" class="btn btn-danger delete-btn" data-message-id="" data-csrf-token="" style="display: none;"><i class="fas fa-trash"></i> Supprimer le message</button>
                    </div>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchReport');
            const userFilter = document.getElementById('user_filter');
            const statutFilter = document.getElementById('statut_filter');
            const analyzeButtons = document.querySelectorAll('.analyze-btn');
            const analysisModal = new bootstrap.Modal(document.getElementById('analysisModal'));

            if (!searchInput || !userFilter || !statutFilter || !analyzeButtons.length) {
                console.error('Required elements not found!');
                return;
            }

            function debounce(func, wait) {
                let timeout;
                return function(...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), wait);
                };
            }

            const applyFilters = debounce(function() {
                const searchText = searchInput.value.trim().toLowerCase();
                const selectedUser = userFilter.value.trim();
                const selectedStatut = statutFilter.value.trim();
                const cards = document.querySelectorAll('.report-card-container');

                cards.forEach(card => {
                    const idElement = card.querySelector('.card-body p:nth-child(1)');
                    const reasonElement = card.querySelector('.card-body p:nth-child(2)');
                    const dateElement = card.querySelector('.card-body p:nth-child(3)');
                    const userElement = card.querySelector('.card-body p:nth-child(4)');
                    const messageElement = card.querySelector('.card-body p:nth-child(5)');
                    const statusElement = card.querySelector('.card-header');

                    const id = idElement ? idElement.textContent.toLowerCase() : '';
                    const reason = reasonElement ? reasonElement.textContent.toLowerCase() : '';
                    const date = dateElement ? dateElement.textContent.toLowerCase() : '';
                    const user = userElement ? userElement.textContent.toLowerCase() : '';
                    const message = messageElement ? messageElement.textContent.toLowerCase() : '';
                    const status = statusElement ? statusElement.textContent.toLowerCase() : '';

                    const matchesSearch = searchText === '' || (
                        id.includes(searchText) ||
                        reason.includes(searchText) ||
                        date.includes(searchText) ||
                        user.includes(searchText) ||
                        message.includes(searchText) ||
                        status.includes(searchText)
                    );

                    const matchesUser = selectedUser === '' || user.includes(selectedUser);
                    const matchesStatut = selectedStatut === '' || status.includes(selectedStatut);

                    card.style.display = matchesSearch && matchesUser && matchesStatut ? '' : 'none';
                });
            }, 300);

            searchInput.addEventListener('input', applyFilters);
            userFilter.addEventListener('change', applyFilters);
            statutFilter.addEventListener('change', applyFilters);

            analyzeButtons.forEach(button => {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    const reportId = this.getAttribute('data-report-id');
                    const csrfToken = this.getAttribute('data-csrf-token');

                    fetch(`{{ path('admin_report_analyze', {'id': 'REPORT_ID'}) }}`.replace('REPORT_ID', reportId), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: new URLSearchParams({
                            '_token': csrfToken
                        }).toString()
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(data => {
                                throw new Error(data.error || 'Erreur réseau ou serveur');
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.error) {
                            alert('Erreur : ' + data.error);
                            return;
                        }

                        // Update modal content
                        document.getElementById('modalReportId').textContent = data.reportId;
                        document.getElementById('modalStatus').textContent = data.isLegitimate ? 'Légitime' : 'Non légitime';
                        document.getElementById('modalReportReason').textContent = data.reportReason || 'Non spécifié';
                        document.getElementById('modalMessage').textContent = data.message || 'Aucun message';
                        document.getElementById('modalReason').textContent = data.reason;

                        // Update buttons
                        const deleteBtn = document.querySelector('.delete-btn');
                        if (deleteBtn) {
                            deleteBtn.style.display = 'none';

                            // Set data for delete button (message ID)
                            if (data.messageId) {
                                deleteBtn.setAttribute('data-message-id', data.messageId);
                                deleteBtn.setAttribute('data-csrf-token', '{{ csrf_token('delete_message') }}' + data.messageId);
                                deleteBtn.style.display = 'inline-block';
                            }
                        } else {
                            console.error('Delete button not found in modal!');
                        }

                        analysisModal.show();
                    })
                    .catch(error => {
                        console.error('Erreur lors de l\'analyse:', error);
                        alert('Une erreur est survenue lors de l\'analyse : ' + error.message);
                    });
                });
            });

            // Handle delete button click
            const deleteBtn = document.querySelector('.delete-btn');
            if (deleteBtn) {
                deleteBtn.addEventListener('click', function() {
                    const messageId = this.getAttribute('data-message-id');
                    const csrfToken = this.getAttribute('data-csrf-token');

                    if (!confirm('Voulez-vous vraiment supprimer ce message ?')) {
                        return;
                    }

                    fetch(`{{ path('admin_message_delete', {'id': 'MESSAGE_ID'}) }}`.replace('MESSAGE_ID', messageId), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: new URLSearchParams({
                            '_token': csrfToken
                        }).toString()
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(data => {
                                throw new Error(data.error || 'Erreur réseau ou serveur');
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert(data.message);
                        analysisModal.hide();
                        window.location.reload(); // Refresh to update UI
                    })
                    .catch(error => {
                        console.error('Erreur lors de la suppression:', error);
                        alert('Une erreur est survenue lors de la suppression : ' + error.message);
                    });
                });
            } else {
                console.error('Delete button not found for event listener!');
            }
        });
    </script>
{% endblock %}