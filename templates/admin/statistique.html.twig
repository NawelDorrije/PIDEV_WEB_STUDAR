{% extends 'base.html.twig' %}

{% block title %}Admin Dashboard{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* [Keep all your existing CSS styles] */
        .admin-container {
            display: flex;
            min-height: 100vh;
        }
        
        /* Fixed sidebar */
        .admin-sidebar {
            width: 80px;
            background-color: white;
            color: white;
            padding: 20px 10px;
            position: fixed;
            height: 100vh;
            transition: width 0.3s;
            overflow: hidden;
            z-index: 1000;
        }
        
        .admin-sidebar:hover {
            width: 250px;
        }
        
        .admin-content {
            margin-left: 80px;
            padding: 30px;
            flex: 1;
            transition: margin-left 0.3s;
            background-color: white;
        }
        
        .admin-sidebar:hover ~ .admin-content {
            margin-left: 250px;
        }
        
        /* Sidebar navigation with icons */
        .sidebar-nav {
            list-style: none;
            padding: 0;
            margin-top: 30px;
        }
        
        .sidebar-nav li {
            margin-bottom: 15px;
            white-space: nowrap;
        }
        
        .sidebar-nav a {
            color: #333;
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 10px 15px;
            border-radius: 50px;
            transition: all 0.3s;
        }
        
        .sidebar-nav a:hover, 
        .sidebar-nav a.active {
            background-color: #f35525;
            color: white;
        }
        
        .sidebar-nav i {
            font-size: 20px;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(243, 85, 37, 0.1);
            border-radius: 50%;
            margin-right: 15px;
            transition: all 0.3s;
            color: #f35525;
        }
        
        .sidebar-nav a:hover i,
        .sidebar-nav a.active i {
            background: rgba(255,255,255,0.2);
            transform: scale(1.1);
            color: white;
        }
        
        .sidebar-nav .nav-text {
            opacity: 0;
            transition: opacity 0.2s;
            transition-delay: 0.1s;
            font-weight: 500;
        }
        
        .admin-sidebar:hover .nav-text {
            opacity: 1;
        }
        
        /* Table styling */
        .user-table-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            padding: 20px;
            margin-top: 20px;
        }
        
        /* Add chart-specific styles */
        .chart-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            padding: 20px;
            margin-top: 20px;
        }
        
        .chart-wrapper {
            position: relative;
            height: 400px;
            width: 100%;
        }
        
        .chart-title {
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="admin-container">
    <!-- Sidebar -->
    <div class="admin-sidebar">
        <ul class="sidebar-nav">
            <li>
                <a href="{{ path('app_admin_dashboard') }}" class="{{ app.current_route starts with 'app_admin_dashboard' ? 'active' : '' }}">
                    <i class="fas fa-users"></i>
                    <span class="nav-text">Utilisateurs</span>
                </a>
            </li>
            <li>
                <a href="{{ path('app_admin_statistique') }}" class="{{ app.current_route starts with 'app_admin_statistique' ? 'active' : '' }}">
                    <i class="fas fa-chart-pie"></i>
                    <span class="nav-text">Statistiques</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class="fas fa-cog"></i>
                    <span class="nav-text">Paramètres</span>
                </a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="admin-content">
        <h3 class="chart-title">Statistiques</h3>
        
        <div class="chart-container">
            <h6>Répartition des utilisateurs par rôle</h6>
            <div class="chart-wrapper">
                <canvas id="rolePieChart"></canvas>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize chart with empty data
            initChart();
            
            // Fetch data from API endpoint
            fetch('/admin/user-stats')
                .then(response => response.json())
                .then(data => updateChart(data))
                .catch(error => {
                    console.error('Error fetching data:', error);
                    // Fallback to default data if API fails
                    updateChart({
                        labels: ["Admin", "User", "Moderator"],
                        data: [10, 50, 5],
                        colors: ['#f35525', '#4e73df', '#1cc88a']
                    });
                });
        });

        let chartInstance = null;

        function initChart() {
            const ctx = document.getElementById('rolePieChart');
            if (!ctx) return;

            chartInstance = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: [],
                    datasets: [{
                        data: [],
                        backgroundColor: [],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = Math.round((value / total) * 100);
                                    return `${label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
        }

        function updateChart(chartData) {
            if (!chartInstance) return;
            
            chartInstance.data.labels = chartData.labels;
            chartInstance.data.datasets[0].data = chartData.data;
            chartInstance.data.datasets[0].backgroundColor = chartData.colors;
            chartInstance.update();
        }
    </script>
{% endblock %}