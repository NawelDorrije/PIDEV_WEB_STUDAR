<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            {# Flash messages display #}
            {% for type, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ type == 'erreur' ? 'danger' : type == 'succès' ? 'success' : 'info' }} alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                {% endfor %}
            {% endfor %}
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title mb-4">
                        {% if form.vars.data and form.vars.data.id %}
                            Modifier le transport #{{ form.vars.data.id }}
                        {% else %}
                            Créer un nouveau transport
                        {% endif %}
                    </h2>

                    {{ form_start(form) }}
                        <div class="mb-3">
                            {{ form_label(form.reservation, 'Réservation', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.reservation, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.reservation) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.tempsArrivageDisplay, 'Heure d\'arrivée estimée', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.tempsArrivageDisplay, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.tempsArrivageDisplay) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.voiture, 'Véhicule', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.voiture, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.voiture) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.status, 'Statut', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.status, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.status) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.trajetEnKm, 'Distance du trajet (km)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.trajetEnKm, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.trajetEnKm) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.tarif, 'Tarif (TND)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.tarif, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.tarif) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.loadingTimeActual, 'Temps de chargement réel (minutes)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.loadingTimeActual, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.loadingTimeActual) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.unloadingTimeActual, 'Temps de déchargement réel (minutes)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.unloadingTimeActual, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.unloadingTimeActual) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.loadingTimeAllowed, 'Temps de chargement autorisé (minutes)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.loadingTimeAllowed, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.loadingTimeAllowed) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.unloadingTimeAllowed, 'Temps de déchargement autorisé (minutes)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.unloadingTimeAllowed, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.unloadingTimeAllowed) }}
                        </div>
                        <div class="mb-3">
                            {{ form_label(form.extraCost, 'Coût supplémentaire (TND)', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.extraCost, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.extraCost) }}
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a href="{{ path('app_transport_index') }}" class="btn" style="background-color: #1976D2; color: white;">
                                {{ form.vars.data and form.vars.data.id ? 'Annuler' : 'Retour à la liste' }}
                            </a>
                            <button type="submit" class="btn" style="background-color: #FF5722; color: white;">
                                {{ button_label|default(form.vars.data and form.vars.data.id ? 'Mettre à jour' : 'Enregistrer') }}
                            </button>
                        </div>

                        <script>
                            document.addEventListener('DOMContentLoaded', function() {
                                const reservationSelect = document.getElementById('{{ form.reservation.vars.id }}');
                                const arrivalDisplay = document.getElementById('{{ form.tempsArrivageDisplay.vars.id }}');

                                if (reservationSelect && arrivalDisplay) {
                                    // Initial load if value exists
                                    if (reservationSelect.value) {
                                        fetchArrivalTime(reservationSelect.value);
                                    }

                                    // On change event
                                    reservationSelect.addEventListener('change', function() {
                                        arrivalDisplay.value = 'Chargement...';
                                        if (this.value) {
                                            fetchArrivalTime(this.value);
                                        } else {
                                            arrivalDisplay.value = '';
                                        }
                                    });

                                    function fetchArrivalTime(reservationId) {
                                        fetch("{{ path('api_reservation_arrival_time', {'id': 'PLACEHOLDER'}) }}".replace('PLACEHOLDER', reservationId))
                                            .then(response => {
                                                if (!response.ok) throw new Error('Erreur lors du chargement');
                                                return response.json();
                                            })
                                            .then(data => {
                                                arrivalDisplay.value = data.formatted ||
                                                    new Date(data.arrivalTime).toLocaleDateString('fr-FR', {
                                                        weekday: 'long',
                                                        day: 'numeric',
                                                        month: 'long',
                                                        year: 'numeric',
                                                        hour: '2-digit',
                                                        minute: '2-digit'
                                                    });
                                            })
                                            .catch(error => {
                                                console.error('Erreur:', error);
                                                arrivalDisplay.value = 'Erreur lors du chargement de l\'heure';
                                            });
                                    }
                                }
                            });
                        </script>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
    <a href="{{ path('app_transport_home') }}" class="text-decoration-none ps-3 mt-3 d-inline-block" style="color: #1976D2;">
        <i class="fas fa-arrow-left me-2"></i>
        {{ form.vars.data and form.vars.data.id ? 'Annuler' : "Retour à l'accueil" }}
    </a>
</div>