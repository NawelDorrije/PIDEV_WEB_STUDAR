{% extends 'base.html.twig' %}

{% block title %}Statistiques - Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .stats-container {
            max-width: 1200px;
            margin: 3rem auto;
            padding: 0 1.5rem;
            font-family: 'Inter', sans-serif;
        }
        .subtitle {
            text-align: center;
            margin-bottom: 2rem;
            color: #64748b;
            font-size: 1rem;
        }
        .nav-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin: 2rem 0;
        }
        .nav-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 0.95rem;
            color: #1e293b;
            background: #fff;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        .nav-button:hover {
            background: #f8fafc;
            border-color: #4f46e5;
        }
        .nav-button.active {
            background: #2556A7;
            color: #fff;
            border-color: #007bff;
        }
        h1 {
            text-align: center;
            margin-bottom: 2rem;
            color: #1e293b;
            font-size: 2.2rem;
            font-weight: 700;
        }
        .filters-container {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-bottom: 2rem;
            background: #f8fafc;
            padding: 1rem;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        .filter-select, .download-button {
            padding: 0.75rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 0.95rem;
            color: #1e293b;
            background: #fff;
            width: 220px;
            transition: all 0.3s ease;
        }
        .download-button {
            background: #2556A7;
            color: #fff;
            border: none;
            cursor: pointer;
        }
        .download-button:hover {
            background: #1e4685;
        }
        .filter-select:focus, .download-button:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        }
        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 2.5rem;
        }
        .kpi-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            text-align: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .kpi-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        .kpi-card i {
            font-size: 2rem;
            margin-bottom: 10px;
            color: #f35525;
        }
        .kpi-card.meubles i { color: #4f46e5; }
        .kpi-card.ca i { color: #10b981; }
        .kpi-card.top-vendeur i { color: #f97316; }
        .kpi-card.commandes i { color: #3b82f6; }
        .kpi-card h3 {
            color: #666;
            margin-bottom: 10px;
            font-size: 1rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        .kpi-card .value {
            font-size: 24px;
            font-weight: 600;
            color: #f35525;
        }
        .kpi-card .value.ca::after {
            content: ' TND';
            font-size: 18px;
            color: #10b981;
        }
        .kpi-card .value small {
            font-size: 14px;
            color: #64748b;
            display: block;
            margin-top: 5px;
        }
        .kpi-card.commandes .value {
            font-size: 16px;
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            justify-items: center;
        }
        .kpi-card.commandes .status-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #1e293b;
            font-size: 0.95rem;
        }
        .kpi-card.commandes .status-item i {
            font-size: 1.2rem;
            color: #3b82f6;
        }
        .chart-container {
            background: #fff;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 2.5rem;
        }
        .chart-container h2 {
            font-size: 1.5rem;
            color: #1e293b;
            margin-bottom: 1.5rem;
        }
        .chart-wrapper {
            position: relative;
            height: 350px;
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
        }
        .loading-spinner {
            text-align: center;
            padding: 20px;
        }
        .error-message {
            color: #dc3545;
            text-align: center;
            margin: 20px 0;
            display: none;
        }
        #calendar {
            background: #fff;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        /* Dark Theme Styles */
        body.theme-dark {
            background-color: #1a1a1a !important;
            color: #ffffff !important;
        }
        body.theme-dark .stats-container {
            background: #1a1a1a !important;
        }
        body.theme-dark h1,
        body.theme-dark .chart-container h2 {
            color: #ffffff !important;
        }
        body.theme-dark .subtitle {
            color: #cccccc !important;
        }
        body.theme-dark .filters-container {
            background: #3a3a3a !important;
            box-shadow: 0 2px 10px rgba(255,255,255,0.05) !important;
        }
        body.theme-dark .filter-select,
        body.theme-dark .download-button,
        body.theme-dark .nav-button {
            background: #3a3a3a !important;
            color: #ffffff !important;
            border-color: #555 !important;
        }
        body.theme-dark .nav-button.active {
            background: #2556A7 !important;
            color: #ffffff !important;
            border-color: #007bff !important;
        }
        body.theme-dark .filter-select:focus,
        body.theme-dark .download-button:focus,
        body.theme-dark .nav-button:hover {
            border-color: #4f46e5 !important;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2) !important;
        }
        body.theme-dark .kpi-card {
            background: #2c2c2c !important;
            box-shadow: 0 2px 10px rgba(255,255,255,0.05) !important;
        }
        body.theme-dark .kpi-card h3 {
            color: #cccccc !important;
        }
        body.theme-dark .kpi-card .value {
            color: #f35525 !important;
        }
        body.theme-dark .kpi-card .value small {
            color: #cccccc !important;
        }
        body.theme-dark .kpi-card.commandes .status-item {
            color: #ffffff !important;
        }
        body.theme-dark .chart-container,
        body.theme-dark #calendar {
            background: #2c2c2c !important;
            box-shadow: 0 2px 10px rgba(255,255,255,0.05) !important;
        }
        body.theme-dark .error-message {
            color: #ff6666 !important;
        }
        body.theme-dark .fc-theme-standard .fc-scrollgrid {
            background: #2c2c2c !important;
        }
        body.theme-dark .fc-theme-standard th,
        body.theme-dark .fc-theme-standard td {
            border-color: #555 !important;
            color: #ffffff !important;
        }

        @media (max-width: 768px) {
            .kpi-grid {
                grid-template-columns: 1fr;
            }
            .filters-container {
                flex-direction: column;
                align-items: center;
            }
            .filter-select, .download-button {
                width: 100%;
            }
            .kpi-card.commandes .value {
                grid-template-columns: 1fr;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="stats-container" data-theme="{{ app.user.theme ?? 'light' }}">
    <h1>Tableau de Bord Administrateur</h1>
    <p class="subtitle">Statistiques et gestion des meubles</p>

    <!-- Filtres -->
    <div class="filters-container">
        <select class="filter-select" id="filtre-statut" onchange="applyFilters()">
            <option value="" {% if filtreStatut == '' %}selected{% endif %}>Tous les statuts</option>
            <option value="EN_ATTENTE" {% if filtreStatut == 'EN_ATTENTE' %}selected{% endif %}>En attente</option>
            <option value="PAYÉE" {% if filtreStatut == 'PAYÉE' %}selected{% endif %}>Payée</option>
            <option value="LIVRÉE" {% if filtreStatut == 'LIVRÉE' %}selected{% endif %}>Livrée</option>
            <option value="ANNULEE" {% if filtreStatut == 'ANNULEE' %}selected{% endif %}>Annulée</option>
        </select>
        <select class="filter-select" id="filtre-periode" onchange="applyFilters()">
            <option value="all" {% if filtrePeriode == 'all' %}selected{% endif %}>Toutes périodes</option>
            <option value="month" {% if filtrePeriode == 'month' %}selected{% endif %}>Mois courant</option>
            <option value="year" {% if filtrePeriode == 'year' %}selected{% endif %}>Année courante</option>
        </select>
        <button class="download-button" onclick="window.location.href='{{ path('app_gestion_meubles_export_stats_pdf') }}?statut={{ filtreStatut }}&periode={{ filtrePeriode }}'">Exporter en PDF</button>
    </div>

    <!-- Cartes KPI -->
    <div class="kpi-grid">
        <div class="kpi-card meubles">
            <i class="bi bi-box-seam"></i>
            <h3>Total Meubles</h3>
            <div class="value">{{ nombreMeubles }}</div>
        </div>
        <div class="kpi-card ca">
            <i class="bi bi-currency-dollar"></i>
            <h3>Chiffre d'Affaires</h3>
            <div class="value ca">{{ chiffreAffaires|number_format(2, ',', ' ') }}</div>
            <small>Période sélectionnée</small>
        </div>
        <div class="kpi-card top-vendeur">
            <i class="bi bi-person-check"></i>
            <h3>Top Vendeur</h3>
            <div class="value">
                {% if topVendeur %}
                    {{ topVendeur.nom }} {{ topVendeur.prenom }}
                    <small>{{ topVendeur.totalVentes|number_format(2, ',', ' ') }} TND</small>
                {% else %}
                    Aucun
                {% endif %}
            </div>
        </div>
        <div class="kpi-card commandes">
            <i class="bi bi-cart"></i>
            <h3>Commandes</h3>
            <div class="value">
                <div class="status-item"><i class="bi bi-credit-card"></i> Payées: <span>{{ commandesParStatut['PAYÉE']|default(0) }}</span></div>
                <div class="status-item"><i class="bi bi-truck"></i> Livrées: <span>{{ commandesParStatut['LIVRÉE']|default(0) }}</span></div>
                <div class="status-item"><i class="bi bi-hourglass-split"></i> En attente: <span>{{ commandesParStatut['EN_ATTENTE']|default(0) }}</span></div>
                <div class="status-item"><i class="bi bi-x-circle"></i> Annulées: <span>{{ commandesParStatut['ANNULEE']|default(0) }}</span></div>
            </div>
        </div>
    </div>

    <!-- Graphiques -->
    <div class="chart-container">
        <h2>Chiffre d'Affaires par Mois</h2>
        <div class="loading-spinner">Chargement...</div>
        <div class="error-message" id="ca-error">Erreur lors du chargement des données</div>
        <div class="chart-wrapper">
            <canvas id="caChart"></canvas>
        </div>
    </div>
    <div class="chart-container">
        <h2>Répartition des Commandes par Statut</h2>
        <div class="loading-spinner">Chargement...</div>
        <div class="error-message" id="statut-error">Erreur lors du chargement des données</div>
        <div class="chart-wrapper">
            <canvas id="statutChart"></canvas>
        </div>
    </div>

    <!-- Calendrier -->
    <div class="chart-container">
        <h2>Calendrier des Événements</h2>
        <div id="calendar"></div>
    </div>
</div>
<div class="nav-buttons">
    <a href="{{ path('app_gestion_meubles_meuble_admin') }}" class="nav-button" title="Consulter les meubles">
        <i class="bi bi-tag"></i>
        <span class="nav-text">Consulter les meubles</span>
    </a>
    <a href="{{ path('app_gestion_meubles_commandes_admin') }}" class="nav-button" title="Consulter les commandes"> 
        <i class="bi bi-clock-history"></i>
        <span class="nav-text">Consulter les commandes</span>
    </a>
    <a href="{{ path('app_gestion_meubles_statistiques') }}" class="nav-button active" title="Voir les statistiques">
        <i class="bi bi-bar-chart"></i>
        <span class="nav-text">Statistiques</span>
    </a>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        // Theme application
        function applyTheme(theme) {
            console.log('Applying theme:', theme);
            document.body.className = `theme-${theme}`;
            console.log('Body class set to:', document.body.className);
            // Force style recalculation
            document.body.offsetHeight;
        }

        // Apply theme on page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('User theme from Twig:', '{{ app.user.theme ?? 'light' }}');
            const container = document.querySelector('.stats-container');
            if (!container) {
                console.error('Error: .stats-container not found');
                return;
            }
            const theme = container.dataset.theme || 'light';
            console.log('Theme from data-theme:', theme);
            applyTheme(theme);

            // Appliquer les filtres
            window.applyFilters = function() {
                const statut = document.getElementById('filtre-statut').value;
                const periode = document.getElementById('filtre-periode').value;
                window.location.href = '{{ path('app_gestion_meubles_statistiques') }}?statut=' + encodeURIComponent(statut) + '&periode=' + encodeURIComponent(periode);
            };

            // Initialiser les graphiques
            const caData = {{ caParMoisData|json_encode|raw }};
            const statutData = {{ commandesParStatut|json_encode|raw }};

            const caCtx = document.getElementById('caChart').getContext('2d');
            const caChart = new Chart(caCtx, {
                type: 'bar',
                data: {
                    labels: Object.keys(caData).length ? Object.keys(caData) : ['Aucune donnée'],
                    datasets: [{
                        label: 'Chiffre d\'affaires (TND)',
                        data: Object.values(caData).length ? Object.values(caData) : [0],
                        backgroundColor: '#10b981'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: { beginAtZero: true, title: { display: true, text: 'Montant (TND)' } },
                        x: { title: { display: true, text: 'Mois' } }
                    },
                    plugins: {
                        legend: { position: 'top' },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + context.parsed.y.toFixed(2) + ' TND';
                                }
                            }
                        }
                    }
                }
            });
            document.querySelector('#ca-error').style.display = Object.keys(caData).length ? 'none' : 'block';

            const statutCtx = document.getElementById('statutChart').getContext('2d');
            const statutChart = new Chart(statutCtx, {
                type: 'pie',
                data: {
                    labels: Object.keys(statutData).length ? Object.keys(statutData) : ['Aucune donnée'],
                    datasets: [{
                        data: Object.values(statutData).length ? Object.values(statutData) : [0],
                        backgroundColor: ['#ef4444', '#10b981', '#3b82f6', '#6b7280']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'right' },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = total ? Math.round((value / total) * 100) : 0;
                                    return `${label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
            document.querySelector('#statut-error').style.display = Object.keys(statutData).length ? 'none' : 'block';

            // Cacher les spinners après le chargement
            document.querySelectorAll('.loading-spinner').forEach(spinner => spinner.style.display = 'none');

            // Initialiser le calendrier
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'fr',
                height: 'auto',
                events: {{ calendarEvents|json_encode|raw }},
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                titleFormat: { year: 'numeric', month: 'long' }
            });
            calendar.render();
        });
    </script>
{% endblock %}