{% extends 'base.html.twig' %}

{% block title %}New ReservationLogement{% endblock %}

{% block stylesheets %}
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600;700&display=swap');
  
  .invalid-feedback {
    color: #dc3545;
    font-size: 0.875em;
    margin-top: 0.25rem;
    display: block;
}

.is-invalid {
    border-color: #dc3545 !important;
}

.is-invalid + label {
    color: #dc3545 !important;
}

/* Pour les champs date */
input[type="date"].is-invalid {
    background-image: none;
}
  .logement-section {
    padding: 80px 0;
    background-color: #f8f9fa;
  }

  .logement-container {
    background: #FFE8D6;
    padding: 40px;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(242, 129, 29, 0.2);
    border: 1px solid #FFD1A8;
  }

  .logement-title {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    color: #F25922;
    letter-spacing: 2px;
    text-align: center;
    margin-bottom: 40px;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    font-size: 1.7em;
  }

  .logement-title i {
    font-size: 1.2em;
    color: #F25922;
  }

  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 25px;
  }

  .form-group {
    flex: 0 0 50%;
    padding: 0 15px;
    margin-bottom: 25px;
    position: relative;
  }

  .form-group label {
    position: absolute;
    left: 25px;
    top: 15px;
    color: #6c757d;
    transition: all 0.3s ease;
    pointer-events: none;
    background: white;
    padding: 0 5px;
    border-radius: 4px;
  }

  .logement-input {
    width: 100%;
    height: 55px;
    border: 2px solid #FFD1A8;
    border-radius: 8px;
    padding: 15px 20px;
    background: white;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
  }

  .logement-input:focus {
    border-color: #4453A6;
    outline: none;
  }

  .logement-input:focus + label,
  .logement-input:not(:placeholder-shown) + label {
    top: -10px;
    left: 20px;
    font-size: 12px;
    color: #4453A6;
    background: white;
    padding: 0 5px;
  }

  .logement-action-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 40px;
  }

  .logement-btn-save {
    background-color: #4453A6;
    color: white;
    padding: 15px 40px;
    border-radius: 50px;
    font-weight: 600;
    border: none;
    transition: all 0.3s;
    box-shadow: 0 4px 15px rgba(68, 83, 166, 0.3);
    font-family: 'Poppins', sans-serif;
    letter-spacing: 1px;
    text-transform: uppercase;
    font-size: 16px;
  }
  
  .logement-btn-save:hover{
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(68, 83, 166, 0.4);
  }

  @media (max-width: 768px) {
    .form-group {
      flex: 0 0 100%;
    }
    
    .logement-container {
      padding: 30px;
    }
    
    .logement-title {
      font-size: 24px;
      flex-direction: column;
      gap: 8px;
    }
    
    .logement-action-buttons {
      flex-direction: column;
      gap: 15px;
    }
    
    .logement-btn-save {
      width: 100%;
    }
  }
</style>
{% endblock %}

{% block body %}
<section class="logement-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="logement-container">
                    <h1 class="logement-title">
                        <i class="fas fa-home"></i>
                        Nouvelle Réservation Logement
                    </h1>
                    
                    {{ form_start(form, {'attr': {'class': 'logement-form'}}) }}
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.dateDebut, {
                                    'attr': {
                                        'class': 'logement-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.dateDebut) }}
                            </div>
                            <div class="form-group">
                                {{ form_widget(form.dateFin, {
                                    'attr': {
                                        'class': 'logement-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.dateFin) }}
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.proprietaire, {
                                    'attr': {
                                        'class': 'logement-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.proprietaire) }}
                            </div>
                            <div class="form-group">
                                {{ form_widget(form.etudiant, {
                                    'attr': {
                                        'class': 'logement-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.etudiant) }}
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.idLogement, {
                                    'attr': {
                                        'class': 'logement-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.idLogement) }}
                            </div>
                        </div>
                        
                        <div class="logement-action-buttons">
                            <button type="submit" class="logement-btn-save">
                                <i class="fas fa-save mr-2"></i> VALIDER LA RESERVATION
                            </button>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.logement-form');
    
    if (form) {
        // Désactiver la validation HTML5
        form.setAttribute('novalidate', 'novalidate');
        
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            // Validation date de début
            const dateDebut = document.getElementById('{{ form.dateDebut.vars.id }}');
            if (!dateDebut.value) {
                showError(dateDebut, 'La date de début est obligatoire');
                isValid = false;
            } else {
                const selectedDate = new Date(dateDebut.value);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                
                if (selectedDate <= today) {
                    showError(dateDebut, 'La date de début doit être dans le futur');
                    isValid = false;
                } else {
                    clearError(dateDebut);
                }
            }
            
            // Validation date de fin
            const dateFin = document.getElementById('{{ form.dateFin.vars.id }}');
            if (!dateFin.value) {
                showError(dateFin, 'La date de fin est obligatoire');
                isValid = false;
            } else if (dateDebut.value && new Date(dateFin.value) <= new Date(dateDebut.value)) {
                showError(dateFin, 'La date de fin doit être après la date de début');
                isValid = false;
            } else if (dateDebut.value) {
                const diffDays = Math.floor((new Date(dateFin.value) - new Date(dateDebut.value)) / (1000 * 60 * 60 * 24));
                if (diffDays < 30) {
                    showError(dateFin, 'La durée minimum de réservation est de 30 jours');
                    isValid = false;
                } else {
                    clearError(dateFin);
                }
            }
            
            // Validation propriétaire
            const proprietaire = document.getElementById('{{ form.proprietaire.vars.id }}');
            if (!proprietaire.value) {
                showError(proprietaire, 'Le propriétaire est obligatoire');
                isValid = false;
            } else {
                clearError(proprietaire);
            }
            
            // Validation étudiant
            const etudiant = document.getElementById('{{ form.etudiant.vars.id }}');
            if (!etudiant.value) {
                showError(etudiant, 'L\'étudiant est obligatoire');
                isValid = false;
            } else {
                clearError(etudiant);
            }
            
            // Validation logement
            const logement = document.getElementById('{{ form.idLogement.vars.id }}');
            if (!logement.value) {
                showError(logement, 'Le logement est obligatoire');
                isValid = false;
            } else {
                clearError(logement);
            }
            
            if (isValid) {
                form.submit();
            } else {
                // Scroll to first error
                const firstError = form.querySelector('.is-invalid');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
        
        // Validation en temps réel
        const inputs = form.querySelectorAll('.logement-input, input[type="date"]');
        inputs.forEach(input => {
            input.addEventListener('blur', validateField);
            input.addEventListener('input', function() {
                this.classList.remove('is-invalid');
                const errorDiv = this.closest('.form-group')?.querySelector('.invalid-feedback');
                if (errorDiv) errorDiv.remove();
            });
        });
        
        function validateField(e) {
            const input = e.target;
            
            if (input.id === '{{ form.dateDebut.vars.id }}') {
                if (!input.value) {
                    showError(input, 'La date de début est obligatoire');
                } else if (new Date(input.value) <= new Date()) {
                    showError(input, 'La date de début doit être dans le futur');
                } else {
                    clearError(input);
                }
            }
            
            if (input.id === '{{ form.dateFin.vars.id }}') {
                const dateDebut = document.getElementById('{{ form.dateDebut.vars.id }}');
                if (!input.value) {
                    showError(input, 'La date de fin est obligatoire');
                } else if (dateDebut.value && new Date(input.value) <= new Date(dateDebut.value)) {
                    showError(input, 'La date de fin doit être après la date de début');
                } else if (dateDebut.value) {
                    const diffDays = Math.floor((new Date(input.value) - new Date(dateDebut.value)) / (1000 * 60 * 60 * 24));
                    if (diffDays < 30) {
                        showError(input, 'La durée minimum de réservation est de 30 jours');
                    } else {
                        clearError(input);
                    }
                }
            }
            
            if (input.id === '{{ form.proprietaire.vars.id }}' && !input.value) {
                showError(input, 'Le propriétaire est obligatoire');
            }
            
            if (input.id === '{{ form.etudiant.vars.id }}' && !input.value) {
                showError(input, 'L\'étudiant est obligatoire');
            }
            
            if (input.id === '{{ form.idLogement.vars.id }}' && !input.value) {
                showError(input, 'Le logement est obligatoire');
            }
        }
        
        function showError(input, message) {
            const formGroup = input.closest('.form-group');
            if (!formGroup) return;
            
            let errorDiv = formGroup.querySelector('.invalid-feedback');
            if (!errorDiv) {
                errorDiv = document.createElement('div');
                errorDiv.className = 'invalid-feedback';
                formGroup.appendChild(errorDiv);
            }
            
            errorDiv.textContent = message;
            input.classList.add('is-invalid');
        }
        
        function clearError(input) {
            const formGroup = input.closest('.form-group');
            if (!formGroup) return;
            
            const errorDiv = formGroup.querySelector('.invalid-feedback');
            if (errorDiv) {
                errorDiv.remove();
            }
            
            input.classList.remove('is-invalid');
        }
    }
});
</script>
{% endblock %}