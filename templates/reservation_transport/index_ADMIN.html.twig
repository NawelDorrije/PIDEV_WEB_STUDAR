{% extends 'base.html.twig' %}

{% block title %}Réservations de Transport{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    /* Style général */

    
    .section {
        padding: 60px 0;
        background-color: #f8f9fa;
    }
    
    .card {
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
    
    /* Bouton flottant */
    .floating-details-btn {
        position: absolute;
        right: -15px;
        top: 50%;
        transform: translateY(-50%);
        width: 40px;
        height: 40px;
        background: #4453A6;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        z-index: 2;
    }
    
    .floating-details-btn:hover {
        background: #3a4791;
        transform: translateY(-50%) scale(1.1);
        box-shadow: 0 6px 12px rgba(0,0,0,0.3);
    }
    
    .floating-details-btn::after {
        content: "Voir détails";
        position: absolute;
        right: 45px;
        white-space: nowrap;
        background: #4453A6;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        opacity: 0;
        transition: opacity 0.3s ease;
        font-size: 14px;
    }
    
    .floating-details-btn:hover::after {
        opacity: 1;
    }
    
    /* Carte de réservation */
    .transport-card {
        position: relative;
        padding-right: 30px;
        overflow: visible;
        margin-bottom: 20px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        border-left: 4px solid #6c757d;
          width: 1000px;
          margin-left:130px;
    }
    
    .transport-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .transport-card.confirmée {
        border-left-color: #28a745;
    }
    
    .transport-card.en_attente {
        border-left-color: #ffc107;
    }
    
    .transport-card.refusée {
        border-left-color: #dc3545;
    }
    
  .card-title {
        color: #4453A6;
        margin-bottom: 15px;
    }
    
    .card-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        align-items: center;
    }
    
    .card-meta-div {
        display: flex;
        align-items: center;
    }
    
    .card-meta i {
        margin-right: 8px;
        color: #F2811D;
    }
    
    .badge {
        font-size: 0.8rem;
        padding: 5px 10px;
        font-weight: 500;
    }
    
    /* Options de vue */
    .view-options {
        margin-bottom: 30px;
    }
    
    .btn-group {
        margin-right: 10px;
    }
    
    /* Pastel purple animated button */
    .btn-nouveau {
        background-color: #B399D4;
        color: white;
        border: none;
        animation: pop 2s infinite;
        transition: all 0.3s ease;
    }
    
    .btn-nouveau:hover {
        background-color: #9F7FDB;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(179, 153, 212, 0.4);
    }
    
    @keyframes pop {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    
    /* Map styles */
    .route-visualization {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        padding: 20px;
        margin-bottom: 30px;
    }
    
    #routeMap {
        height: 300px;
        border-radius: 8px;
        margin-bottom: 15px;
    }
    
    .route-info {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        
    }
    
    .custom-icon {
        background: transparent;
        border: none;
    }
</style>
{% endblock %}

{% block body %}
<section class="section">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-heading d-flex justify-content-between align-items-center mb-4">
                    <h2 style="color:rgb(94, 68, 166);"><i class="fas fa-bus mr-2"></i>Vos Réservations de Transport</h2>
                    
                </div>
                
                <!-- Status Filter -->
                <div class="status-filter btn-group mb-4" role="group">
                    <a href="{{ path('app_reservation_transport_index_ADMIN') }}" class="btn btn-outline-secondary {{ not current_status ? 'active' }}">Tous</a>
                    <a href="{{ path('app_reservation_transport_index', {'status': 'confirmée'}) }}" 
                       class="btn btn-outline-success {{ current_status == 'confirmée' ? 'active' }}">Confirmées</a>
                    <a href="{{ path('app_reservation_transport_index_ADMIN', {'status': 'en_attente'}) }}" 
                       class="btn btn-outline-warning {{ current_status == 'en_attente' ? 'active' }}">En attente</a>
                    <a href="{{ path('app_reservation_transport_index_ADMIN', {'status': 'refusée'}) }}" 
                       class="btn btn-outline-danger {{ current_status == 'refusée' ? 'active' }}">Refusées</a>
                </div>
                
                <!-- Route Visualization -->
                <div class="route-visualization">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="mb-0"><i class="fas fa-route mr-2"></i>Visualisation des Trajets</h5>
                        <div class="map-controls">
                            <button class="btn btn-sm btn-outline-primary" onclick="zoomIn()">
                                <i class="fas fa-search-plus"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary" onclick="zoomOut()">
                                <i class="fas fa-search-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div id="routeMap">
                        <div class="text-center py-5">
                            <i class="fas fa-map-marked-alt fa-3x text-muted mb-3"></i>
                            <p class="text-muted">Sélectionnez une réservation pour voir le trajet</p>
                        </div>
                    </div>
                    <div class="route-info mt-3">
                        <div class="row">
                            <div class="col-md-6">
                                <p><i class="fas fa-ruler-combined text-primary"></i> <strong>Distance:</strong> <span id="distanceInfo">-</span></p>
                            </div>
                            <div class="col-md-6">
                                <p><i class="far fa-clock text-primary"></i> <strong>Temps estimé:</strong> <span id="durationInfo">-</span></p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Reservations List -->
                <div class="reservation-list">
                    {% for reservation in reservations %}
                    
                    <div class="card transport-card mb-3 {{ reservation.status }}"
                         onclick="showRoute({{ reservation.id }}, 
                                  {{ reservation.departureLat|default('null') }}, 
                                  {{ reservation.departureLng|default('null') }}, 
                                  {{ reservation.destinationLat|default('null') }}, 
                                  {{ reservation.destinationLng|default('null') }},
                                  '{{ reservation.adresseDepart }}',
                                  '{{ reservation.adresseDestination }}')">
                        <div class="card-body">
                            <a href="{{ path('app_reservation_transport_show_ADMIN', {'id': reservation.id}) }}" 
                               class="floating-details-btn" title="Voir détails">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                            <h5 class="card-title" style="color:rgb(68, 71, 166);">
                                <i class="fas fa-bus mr-2"></i>Trajet 
                                <span class="badge badge-{{ 
                                    reservation.status == 'confirmée' ? 'success' : 
                                    (reservation.status == 'en_attente' ? 'warning' : 'danger') 
                                }}">
                                    {{ reservation.status }}
                                </span>
                            </h5>
                            <div class="card-meta">
                                <div class="card-meta-div">
                                    <i class="fas fa-map-marker-alt text-danger"></i> {{ reservation.adresseDepart }}
                                </div>
                                <div class="card-meta-div">
                                    <i class="fas fa-arrow-right text-muted"></i>
                                </div>
                                <div class="card-meta-div">
                                    <i class="fas fa-map-marker-alt text-success"></i> {{ reservation.adresseDestination }}
                                </div>
                            </div>
                            {% if reservation.tempsArrivage %}
                            <div class="card-meta mt-2">
                                <div class="card-meta-div">
                                    <i class="far fa-clock text-info"></i> Temps estimé: {{ reservation.tempsArrivage }}
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                    {% else %}
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle mr-2"></i>Aucune réservation de transport trouvée.
                    </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine@3.2.12/dist/leaflet-routing-machine.js"></script>

    <script>
        let map;
        let routeControl;
        const defaultCoords = [34.0, -6.0]; // Coordonnées par défaut (Maroc)

        function initMap() {
            map = L.map('routeMap').setView(defaultCoords, 12);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            }).addTo(map);
        }

        function showRoute(id, depLat, depLng, destLat, destLng, depAdresse, destAdresse) {
            if (!map) initMap();
            
            // Vérifie si les coordonnées sont valides
            if (!depLat || !depLng || !destLat || !destLng) {
                alert("Les coordonnées de ce trajet ne sont pas disponibles");
                return;
            }

            // Nettoie la carte avant d'ajouter un nouveau trajet
            if (routeControl) {
                map.removeControl(routeControl);
            }
            map.eachLayer(layer => {
                if (layer instanceof L.Marker) {
                    map.removeLayer(layer);
                }
            });

            // Ajoute les marqueurs
            const departureMarker = L.marker([depLat, depLng], {
                icon: L.divIcon({
                    html: '<i class="fas fa-map-marker-alt fa-2x" style="color:red"></i>',
                    className: 'custom-icon'
                })
            }).addTo(map).bindPopup(`<b>Départ:</b> ${depAdresse}`);

            const destinationMarker = L.marker([destLat, destLng], {
                icon: L.divIcon({
                    html: '<i class="fas fa-map-marker-alt fa-2x" style="color:green"></i>',
                    className: 'custom-icon'
                })
            }).addTo(map).bindPopup(`<b>Destination:</b> ${destAdresse}`);

            // Trace l'itinéraire (version simplifiée sans instructions)
            routeControl = L.Routing.control({
    waypoints: [
        L.latLng(depLat, depLng),
        L.latLng(destLat, destLng)
    ],
    routeWhileDragging: false,
    show: false,                     // Hides instructions panel
    addWaypoints: false,
    lineOptions: {
        styles: [{color: '#4285F4', opacity: 0.7, weight: 5}]
    },
    createMarker: function() { return null; }, // Disables intermediate markers
    // Keep itinerary enabled but empty
    itinerary: {
        template: '<div class="hidden-instructions"></div>' // Empty container
    }
}).addTo(map);

// Manually handle route calculation
routeControl.on('routesfound', function(e) {
    const routes = e.routes;
    if (routes && routes[0]) {
        // Update your distance and time display
        const distance = (routes[0].summary.totalDistance / 1000).toFixed(1);
        const duration = Math.round(routes[0].summary.totalTime / 60);
        
        document.getElementById('distanceInfo').textContent = `${distance} km`;
        document.getElementById('durationInfo').textContent = `${duration} min`;
        
        // Force hide any residual elements
        document.querySelectorAll('.leaflet-routing-container').forEach(el => {
            el.style.display = 'none';
        });
    }
});

            // Ajuste la vue de la carte
            const bounds = L.latLngBounds(
                [depLat, depLng],
                [destLat, destLng]
            );
            map.fitBounds(bounds, {padding: [50, 50]});
        }

        function zoomIn() {
            if (map) map.zoomIn();
        }

        function zoomOut() {
            if (map) map.zoomOut();
        }

        // Initialise la carte au chargement
        document.addEventListener('DOMContentLoaded', initMap);
    </script>
{% endblock %}