{% extends 'base.html.twig' %}

{% block title %}{{ edit_mode|default(false) ? 'Edit' : 'New' }} Reservation Transport{% endblock %}

{% block stylesheets %}
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600;700&display=swap');
  
  .invalid-feedback {
    color: #dc3545;
    font-size: 0.875em;
    margin-top: 0.25rem;
    display: block;
}

.is-invalid {
    border-color: #dc3545 !important;
}

.is-invalid + label {
    color: #dc3545 !important;
}
  .transport-section {
    padding: 80px 0;
    background-color: #f8f9fa;
  }

  .transport-container {
    background: #FFE8D6;
    padding: 40px;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(242, 129, 29, 0.2);
    border: 1px solid #FFD1A8;
  }

  .transport-title {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    color: #F25922;
    letter-spacing: 2px;
    text-align: center;
    margin-bottom: 40px;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    font-size: 1.7em;
  }

  .transport-title i {
    font-size: 1.2em;
    color: #F25922;
  }

  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 25px;
  }

  .form-group {
    flex: 0 0 50%;
    padding: 0 15px;
    margin-bottom: 25px;
    position: relative;
  }

  .form-group label {
    position: absolute;
    left: 25px;
    top: 15px;
    color: #6c757d;
    transition: all 0.3s ease;
    pointer-events: none;
    background: white;
    padding: 0 5px;
    border-radius: 4px;
  }

  .transport-input {
    width: 100%;
    height: 55px;
    border: 2px solid #FFD1A8;
    border-radius: 8px;
    padding: 15px 20px;
    background: white;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
  }

  .transport-input:focus {
    border-color: #4453A6;
    outline: none;
  }

  .transport-input:focus + label,
  .transport-input:not(:placeholder-shown) + label {
    top: -10px;
    left: 20px;
    font-size: 12px;
    color: #4453A6;
    background: white;
    padding: 0 5px;
  }

  .transport-action-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 40px;
  }

  .transport-btn-save {
    background-color: #4453A6;
    color: white;
    padding: 15px 40px;
    border-radius: 50px;
    font-weight: 600;
    border: none;
    transition: all 0.3s;
    box-shadow: 0 4px 15px rgba(68, 83, 166, 0.3);
    font-family: 'Poppins', sans-serif;
    letter-spacing: 1px;
    text-transform: uppercase;
    font-size: 16px;
  }

  .transport-btn-save:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(68, 83, 166, 0.4);
  }

  @media (max-width: 768px) {
    .form-group {
      flex: 0 0 100%;
    }
    
    .transport-container {
      padding: 30px;
    }
    
    .transport-title {
      font-size: 24px;
      flex-direction: column;
      gap: 8px;
    }
    
    .transport-action-buttons {
      flex-direction: column;
      gap: 15px;
    }
    
    .transport-btn-save {
      width: 100%;
    }
  }
</style>
{% endblock %}

{% block body %}
<section class="transport-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="transport-container">
                    <h1 class="transport-title">
                        <i class="fas fa-car"></i>
                        {{ edit_mode|default(false) ? 'Modifier' : 'Nouvelle' }} Réservation Transport
                    </h1>
                    
                    {{ form_start(form, {'attr': {'class': 'transport-form'}}) }}
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.adresseDepart, {
                                    'attr': {
                                        'class': 'transport-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.adresseDepart) }}
                            </div>
                            <div class="form-group">
                                {{ form_widget(form.adresseDestination, {
                                    'attr': {
                                        'class': 'transport-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.adresseDestination) }}
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.tempsArrivage, {
    'attr': {
        'class': 'transport-input',
        'placeholder': 'HH:MM (ex: 14:00)'
    }
}) }}
                                {{ form_label(form.tempsArrivage) }}
                            </div>
                            <div class="form-group">
                                {{ form_widget(form.etudiant, {
                                    'attr': {
                                        'class': 'transport-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.etudiant) }}
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                {{ form_widget(form.transporteur, {
                                    'attr': {
                                        'class': 'transport-input',
                                        'placeholder': ' '
                                    }
                                }) }}
                                {{ form_label(form.transporteur) }}
                            </div>
                        </div>
                        
                        <div class="transport-action-buttons">
                            <button type="submit" class="transport-btn-save">
                                <i class="fas fa-save mr-2"></i> {{ edit_mode|default(false) ? 'Mettre à jour' : 'Valider la réservation' }}
                            </button>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.transport-form');
    
    if (form) {
        // Désactiver la validation HTML5
        form.setAttribute('novalidate', 'novalidate');
        
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            let isValid = true;
            
            // Validation adresse départ
            const adresseDepart = document.getElementById('{{ form.adresseDepart.vars.id }}');
            if (!adresseDepart.value.trim()) {
                showError(adresseDepart, 'L\'adresse de départ est obligatoire');
                isValid = false;
            } else if (adresseDepart.value.trim().length < 5) {
                showError(adresseDepart, 'L\'adresse doit contenir au moins 5 caractères');
                isValid = false;
            } else {
                clearError(adresseDepart);
            }
            
            // Validation adresse destination
            const adresseDestination = document.getElementById('{{ form.adresseDestination.vars.id }}');
            if (!adresseDestination.value.trim()) {
                showError(adresseDestination, 'L\'adresse de destination est obligatoire');
                isValid = false;
            } else if (adresseDestination.value.trim().length < 5) {
                showError(adresseDestination, 'L\'adresse doit contenir au moins 5 caractères');
                isValid = false;
            } else {
                clearError(adresseDestination);
            }
            
            // Validation temps arrivage (optionnel)
            // Validation temps arrivage
const tempsArrivage = document.getElementById('{{ form.tempsArrivage.vars.id }}');
if (tempsArrivage.value.trim() && !/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(tempsArrivage.value.trim())) {
    showError(tempsArrivage, 'Format invalide (ex: 14:00)');
    isValid = false;
} else {
    clearError(tempsArrivage);
}
            
            // Validation étudiant
            const etudiant = document.getElementById('{{ form.etudiant.vars.id }}');
            if (!etudiant.value) {
                showError(etudiant, 'L\'étudiant est obligatoire');
                isValid = false;
            } else {
                clearError(etudiant);
            }
            
            if (isValid) {
                form.submit();
            } else {
                // Scroll to first error
                const firstError = form.querySelector('.is-invalid');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
        
        // Validation en temps réel
        const inputs = form.querySelectorAll('.transport-input');
        inputs.forEach(input => {
            input.addEventListener('blur', validateField);
            input.addEventListener('input', function() {
                this.classList.remove('is-invalid');
                const errorDiv = this.closest('.form-group')?.querySelector('.invalid-feedback');
                if (errorDiv) errorDiv.remove();
            });
        });
        
        function validateField(e) {
            const input = e.target;
            
            if (input.id === '{{ form.adresseDepart.vars.id }}') {
                if (!input.value.trim()) {
                    showError(input, 'L\'adresse de départ est obligatoire');
                } else if (input.value.trim().length < 5) {
                    showError(input, 'L\'adresse doit contenir au moins 5 caractères');
                } else {
                    clearError(input);
                }
            }
            
            if (input.id === '{{ form.adresseDestination.vars.id }}') {
                if (!input.value.trim()) {
                    showError(input, 'L\'adresse de destination est obligatoire');
                } else if (input.value.trim().length < 5) {
                    showError(input, 'L\'adresse doit contenir au moins 5 caractères');
                } else {
                    clearError(input);
                }
            }
            
          if (input.id === '{{ form.tempsArrivage.vars.id }}') {
    if (input.value.trim() && !/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(input.value.trim())) {
        showError(input, 'Format invalide (ex: 14:00)');
    } else {
        clearError(input);
    }
}
            
            if (input.id === '{{ form.etudiant.vars.id }}' && !input.value) {
                showError(input, 'L\'étudiant est obligatoire');
            }
        }
        
        function showError(input, message) {
            const formGroup = input.closest('.form-group');
            if (!formGroup) return;
            
            let errorDiv = formGroup.querySelector('.invalid-feedback');
            if (!errorDiv) {
                errorDiv = document.createElement('div');
                errorDiv.className = 'invalid-feedback';
                formGroup.appendChild(errorDiv);
            }
            
            errorDiv.textContent = message;
            input.classList.add('is-invalid');
        }
        
        function clearError(input) {
            const formGroup = input.closest('.form-group');
            if (!formGroup) return;
            
            const errorDiv = formGroup.querySelector('.invalid-feedback');
            if (errorDiv) {
                errorDiv.remove();
            }
            
            input.classList.remove('is-invalid');
        }
    }
});
</script>
{% endblock %}