{% block stylesheets %}
   
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Additional CSS Files -->
    <link rel="stylesheet" href="{{ asset('assets/css/fontawesome.css') }}">
    <link rel="stylesheet" href="{{ asset('assets/css/templatemo-villa-agency.css') }}">
    <link rel="stylesheet" href="{{ asset('assets/css/owl.css') }}">
    <link rel="stylesheet" href="{{ asset('assets/css/animate.css') }}">
    <link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css"/>
    <style>
        .line-with-text {
            display: flex;
            align-items: center;
            text-align: center;
            margin: 10px 0;
        }
        .line-with-text::before,
        .line-with-text::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #000;
        }
        .center{
            text-align: center; 
            margin-top: 15px;
        }
        .line-with-text::before {
            margin-right: 10px;
        }
        .line-with-text::after {
            margin-left: 10px;
        }
        .line-text {
            white-space: nowrap;
            padding: 0 10px;
        }
        .orange-button {
            background-color: #f35525;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 5px;
            width: 100%;
        }

        .contact-page .col-lg-6 {
            padding-top: 1px;
    margin-top: 101px;
    margin-left: 30px;
    margin-right: 30px;
    height: 637px;
        }
       /* Benefits Grid Layout */
/* Benefits Grid Layout */
.benefits-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    margin-top: -48px;
}

.benefit-item {
    text-align: center;
    padding: 15px;
    background: white;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.benefit-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.benefit-icon {
    width: 80px;
    height: 80px;
    object-fit: contain;
    margin-bottom: 4px;
}

.benefit-text {
    font-size: 14px;
    font-weight: 500;
    margin-top: 8px;
}

        .row-page{
            height: 500px;
            margin-top: 20px;
        }
        select, input {
            width: 100%;
            padding: 12px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 12px;
        }
        .contact-page{
            margin-top: -100px;
        }
        .row-page {
    display: flex; /* Enable flex layout */
    flex-wrap: nowrap; /* Prevent wrapping */
    gap: 20px; /* Space between columns */
    height: auto; /* Remove fixed height */
    margin-top: 20px;
}
/* Error message styling */
.invalid-feedback {
    color: #dc3545;
    font-size: 0.875em;
    margin-top: -10px;
    margin-bottom: 10px;
}

.is-invalid {
    border-color: #dc3545 !important;
}
#contact-form{
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 5px;


}
.orange-button:hover {
    background-color: #e04b1b; /* Slightly darker on hover */
}
/* Style for file input */
.custom-file-input {
    display: none;
}
.custom-file-label {
    display: block;
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 12px;
    cursor: pointer;
    text-align: center;
    margin-bottom: 10px;
}
.custom-file-label:hover {
    background-color: #f8f9fa;
}
.alert {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
    animation: fadeIn 0.5s, fadeOut 0.5s 4.5s;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Ensure columns take equal space */
.col-lg-6 {
    flex: 1; /* Equal width distribution */
    padding: 40px;
    box-sizing: border-box; /* Include padding in width */
}
.benefit-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-bottom: 1rem;
    }
    .benefit-item img {
        max-height: 80px;
        width: auto;
    }
    .benefit-item p {
        margin-top: 0.5rem;
    }
/* Optional: Add some visual separation */
.left-column {
    background: white;
    border-radius: 8px;
}
/* assets/styles/app.css */
.google-btn {
    display: inline-flex;
    align-items: center;
    padding: 10px 20px;
    background-color: #fff;
    color: #757575;
    border: 1px solid #ddd;
    border-radius: 4px;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s;
}

.google-btn:hover {
    background-color: #f5f5f5;
}

.google-btn img {
    width: 20px;
    height: 20px;
    margin-right: 10px;
}
.right-column {
    background: white;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    border-radius: 8px;
}

/* Style for password generator button */
.btn-outline-secondary {
    color: #6c757d;
    border-color: #6c757d;
    background-color: transparent;
    padding: 8px 12px;
    border-radius: 5px;
    transition: all 0.3s ease;
}

.btn-outline-secondary:hover {
    background-color: #6c757d;
    color: white;
}
    </style>
{% endblock %}

{% block body %}
<div class="contact-page section">
    <div class="container">
        <div class="row row-page">
            <!-- Left Column -->
<div class="col-lg-6">
    <div class="benefit-item">
        <img src="{{ asset('images/logo.png') }}" alt="Furniture" class="benefit-icon"/>
        <h4>Pourquoi devrais-je m'inscrire ?</h4>
        <p>Pour vivre une expérience immersive mêlant propriété, information et
             confiance dans l'univers de l'immobilier, le tout harmonieusement réuni.</p>
    </div>
    <div class="benefits-grid">
        <!-- First Row -->
        <div class="benefit-item">
            <img src="{{ asset('images/meublelogo.png') }}" alt="Furniture" class="benefit-icon"/>
            <p class="benefit-text">Transport de meuble simplifié !</p>
        </div>
        <div class="benefit-item">
            <img src="{{ asset('images/carlogo.png') }}" alt="Car" class="benefit-icon"/>
            <p class="benefit-text">Meuble d'occasion économique !</p>
        </div>
        
        <!-- Second Row -->
        <div class="benefit-item">
            <img style="height: 70px;" src="{{ asset('images/home.png') }}" alt="Home" class="benefit-icon"/>
            <p class="benefit-text">Logement adorable !</p>
        </div>
        <div class="benefit-item" >
            <img style="height: 40px;margin-top: 10px;margin-bottom: 20px;" src="{{ asset('images/email-icon.png') }}" alt="Communication" class="benefit-icon"/>
            <p class="benefit-text">Communication facile !</p>
        </div>
    </div>
</div>
            <!-- Right Column - Form -->
            <div class="col-lg-6 right-column">
                {# Success message #}
                {% for message in app.flashes('success') %}
                    <div class="alert alert-success" style="color: #155724; background-color: #d4edda; border-color: #c3e6cb; padding: 10px; margin-bottom: 15px; border-radius: 4px;">
                        {{ message }}
                    </div>
                {% endfor %}
                
                {{ form_start(form, {'attr': {'id': 'contact-form', 'enctype': 'multipart/form-data'}}) }}                <h3 class="center">Devenez membre !</h3>
                
                <div class="row">
                    <div class="col-lg-12">
                        {{ form_widget(form.imageFile, {
                            'attr': {
                                'class': 'form-control' ~ (form.imageFile.vars.errors|length > 0 ? ' is-invalid' : ''),
                            }
                        }) }}
                        {% if form.imageFile.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.imageFile.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    {# CIN Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.cin, {
                            'attr': {
                                'placeholder': 'CIN (8 chiffres)',
                                'class': 'form-control' ~ (form.cin.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required'
                            }
                        }) }}
                        {% if form.cin.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.cin.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# First Name Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.prenom, {
                            'attr': {
                                'placeholder': 'Prénom',
                                'class': 'form-control' ~ (form.prenom.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required'
                            }
                        }) }}
                        {% if form.prenom.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.prenom.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Last Name Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.nom, {
                            'attr': {
                                'placeholder': 'Nom',
                                'class': 'form-control' ~ (form.nom.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required'
                            }
                        }) }}
                        {% if form.nom.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.nom.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Role Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.role, {
                            'attr': {
                                'class': 'form-control' ~ (form.role.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required'
                            }
                        }) }}
                        {% if form.role.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.role.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Email Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.email, {
                            'attr': {
                                'placeholder': 'Email',
                                'class': 'form-control' ~ (form.email.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required',
                                'pattern': '[^ @]*@[^ @]*'
                            }
                        }) }}
                        {% if form.email.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.email.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Phone Number Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.numTel, {
                            'attr': {
                                'placeholder': 'Numéro de téléphone',
                                'class': 'form-control' ~ (form.numTel.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required'
                            }
                        }) }}
                        {% if form.numTel.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.numTel.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Password Field #}
                    <div class="col-lg-12">
                        {{ form_widget(form.mdp, {
                            'attr': {
                                'placeholder': 'Mot de passe',
                                'class': 'form-control' ~ (form.mdp.vars.errors|length > 0 ? ' is-invalid' : ''),
                                'required': 'required',
                                'type' : 'password'
                            }
                        }) }}
                        {% if form.mdp.vars.errors|length > 0 %}
                            <div class="error-message" style="color: #dc3545; font-size: 0.875em; margin-top: -10px; margin-bottom: 10px;">
                                {% for error in form.mdp.vars.errors %}
                                    <div>{{ error.message }}</div>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                    
                    {# Submit Button #}
                    <div class="col-lg-12">
                        <button type="submit" class="orange-button">S'inscrire</button>
                    </div>
                    
                    <div class="line-with-text">
                        <span class="line-text">Ou</span>
                    </div>
                    <div class="col-lg-12">
                        <a href="{{ path('connect_google') }}" class="orange-button" style="display: flex;width: 400px; justify-content: center; align-items: center; gap: 8px;">
                            <img src="{{ asset('images/googlelogo.png') }}" width="20" alt="Google logo">
                            S'inscrire avec Google
                        </a>     
                    </div>
                    <!-- <div class="social-login">
                        <p>Or sign up with:</p>
                        <a href="{{ path('connect_google') }}" class="google-btn">
                            <img src="{{ asset('images/google-logo.png') }}" alt="Google logo">
                            Continue with Google
                        </a>
                    </div> -->
                    <div class="center">
                        <a href="{{ path('app_utilisateur_signin') }}" style="text-decoration: underline;">Vous avez déjà un compte ?</a>
                    </div>
                </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
  
    <!-- Scripts -->
    <script src="{{ asset('vendor/jquery/jquery.min.js') }}"></script>
    <script src="{{ asset('vendor/bootstrap/js/bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/js/isotope.min.js') }}"></script>
    <script src="{{ asset('assets/js/owl-carousel.js') }}"></script>
    <script src="{{ asset('assets/js/counter.js') }}"></script>
    <script src="{{ asset('assets/js/custom.js') }}"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Sélectionnez le champ mot de passe et ajoutez un bouton de génération
            const passwordField = document.querySelector('#{{ form.mdp.vars.id }}');
            const passwordContainer = passwordField.parentElement;
            
            // Créez le bouton de génération
            const generateBtn = document.createElement('button');
            generateBtn.type = 'button';
            generateBtn.className = 'btn btn-sm btn-outline-secondary';
            generateBtn.style.marginTop = '5px';
            generateBtn.style.width = '100%';
            generateBtn.textContent = 'Générer un mot de passe sécurisé';
            generateBtn.addEventListener('click', generateSecurePassword);
            
            // Ajoutez le bouton après le champ
            passwordContainer.appendChild(generateBtn);
            
            // Fonction de génération de mot de passe
            function generateSecurePassword() {
                // Configuration du mot de passe
                const length = 16; // Longueur recommandée par l'OWASP
                const charset = {
                    lowercase: 'abcdefghijklmnopqrstuvwxyz',
                    uppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
                    numbers: '0123456789',
                    symbols: '!@#$%^&*()_+~`|}{[]\\:;?><,./-='
                };
                
                // Garantir au moins un caractère de chaque type
                let password = [
                    getRandomChar(charset.lowercase),
                    getRandomChar(charset.uppercase),
                    getRandomChar(charset.numbers),
                    getRandomChar(charset.symbols)
                ];
                
                // Remplir le reste du mot de passe
                const allChars = Object.values(charset).join('');
                for (let i = password.length; i < length; i++) {
                    password.push(getRandomChar(allChars));
                }
                
                // Mélanger le mot de passe pour éviter les motifs prévisibles
                password = shuffleArray(password).join('');
                
                // Définir la valeur du champ
                passwordField.value = password;
                
                // Afficher une alerte pour informer l'utilisateur
                showTempAlert('Mot de passe sécurisé généré!', 'success');
            }
            
            // Fonction utilitaire pour obtenir un caractère aléatoire
            function getRandomChar(charset) {
                return charset[Math.floor(Math.random() * charset.length)];
            }
            
            // Fonction pour mélanger un tableau (algorithme de Fisher-Yates)
            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }
            
            // Fonction pour afficher une alerte temporaire
            function showTempAlert(message, type) {
                const alertDiv = document.createElement('div');
                alertDiv.className = `alert alert-${type}`;
                alertDiv.style.position = 'fixed';
                alertDiv.style.top = '20px';
                alertDiv.style.right = '20px';
                alertDiv.style.zIndex = '1000';
                alertDiv.textContent = message;
                
                document.body.appendChild(alertDiv);
                
                setTimeout(() => {
                    alertDiv.style.transition = 'opacity 0.5s';
                    alertDiv.style.opacity = '0';
                    setTimeout(() => alertDiv.remove(), 500);
                }, 3000);
            }
        });
    </script>
{% endblock %}
{% endblock %}